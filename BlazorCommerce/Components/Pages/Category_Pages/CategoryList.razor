@page "/category"
@inject ICategoryRepository _CategoryRepository
<h3>CategoryList</h3>

@if(IsLoading)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading " />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/create" class="btn btn-large btn-secondary" style="width:250px"><i class="bi bi-plus-square"></i> Add New Category</a>
                </div>
            </div>
            @if(Categories.Any())
            {

                <table class="table table-bordered table-striped">
                    <thread>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thread>
                    <tbody>
                        @foreach(var obj in Categories)
                        {
                            <tr>
                                <td>
                                    @obj.Name
                                </td>
                                <td>
                                    <a href="@($"category/update/{obj.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i>Edit</a>
                                    <button class="btn btn-danger"><i class="bi bi-trash-fill"></i>Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool IsLoading { get; set; } = false;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadCategories();
            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
 
        Categories = await _CategoryRepository.GetAllAsync();
        //Load categories
    }
}
