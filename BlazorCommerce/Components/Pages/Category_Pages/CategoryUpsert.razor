@page "/category/create"
@page "/category/update/{id:int}"

@inject ICategoryRepository _CategoryRepository
@inject NavigationManager _navigationManager
@inject IJSRuntime _JS
@if (IsLoading)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading " />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id > 0?"Update ":"Create ")Category</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <EditForm Model="Category" FormName="CategoryUpsertForm" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator/>
                <div class="border p-3 mt-4">
                    <div class="form-floating py-3 col-12">
                        <InputText @bind-Value="Category.Name" class="form-control" id="Name" placeholder="Name"/>
                        <label for="Name">Name</label>
                        <ValidationMessage For="@(() => Category.Name)"/>
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-primary form-control" disabled="@IsLoading">
                                <i class="bi bi-floppy2-fill"></i>@(Id > 0 ? " Update " : " Create ")
                            </button>
                        </div>
                        <div class="col-6 col-md-3">
                            <a href="category" class="btn btn-secondary form-control" disabled="@IsLoading">
                                <i class="bi bi-arrow-bar-left"></i>Back to List
                            </a>
                        </div>
                    </div>
                </div>
            </EditForm>
            @* @if (Categories.Any())
            {

                <table class="table table-bordered table-striped">
                    <thread>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thread>
                    <tbody>
                        @foreach (var obj in Categories)
                        {
                            <tr>
                                <td>
                                    @obj.Name
                                </td>
                                <td>
                                    <a href="@($"category/update/{obj.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i>Edit</a>
                                    <button class="btn btn-danger"><i class="bi bi-trash-fill"></i>Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table> 
            }*@
        </div>
    </div>
}


@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Category Category { get; set; } = new Category();

    private bool IsLoading { get; set; } = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategory();
            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategory()
    {
        if (Id > 0)
        {

            Category = await _CategoryRepository.GetAsync(Id);
            //Load category
        }
    }

    private async Task UpsertCategory()
    {
        IsLoading = true;
        if (Category.Id == 0)
        {

            await _CategoryRepository.CreateAsync(Category);
            await _JS.ToastrSuccess("Category Created Successfully");
            //Create category
        }
        else
        {
            await _CategoryRepository.UpdateAsync(Category);
            await _JS.ToastrSuccess("Category Updated Successfully");
            //Update category
        }
        IsLoading = false;
        _navigationManager.NavigateTo("category");

    }
}
